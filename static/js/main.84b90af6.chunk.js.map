{"version":3,"sources":["redux/enums/playerEnum.js","redux/models/transaction.js","redux/models/player.js","redux/reducers/implementations/playerReducer.js","redux/reducers/rootReducer.js","logo.svg","components/transactions/salaryBtn.js","redux/actions/playerActions.js","components/players/list-item.js","components/players/list.js","components/players/add.js","components/transactions/transactionHistory.js","components/transactions/transactionAdd.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js","redux/store.js"],"names":["playerEnum","ADD_PLAYER","GET_PLAYERS","GET_PLAYER_BY_ID","ADD_TRANSACTION","BANK","FREE_PARKING","ADD_SALARY","Transaction","amount","receiver","this","Player","name","budget","transactions","freeParking","bank","initialState","AddTransaction","state","action","player","payload","id","receiverPlayer","find","el","parseInt","transaction","AddTransactionForPlayer","push","rootReducer","combineReducers","players","type","newState","SalaryBtn","props","dispatch","useDispatch","className","onClick","ListItem","path","number","to","List","useSelector","length","map","index","colSpan","Add","useState","setName","history","useHistory","onSubmit","event","preventDefault","playerActions","for","value","onChange","e","target","TransactionHistory","useParams","setBudget","setReceiver","filter","min","required","classNames","getClassNames","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","basename","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.84b90af6.chunk.js","sourcesContent":["const playerEnum = {\r\n  ADD_PLAYER: \"ADD_PLAYER\",\r\n  GET_PLAYERS: \"GET_PLAYERS\",\r\n  GET_PLAYER_BY_ID: \"GET_PLAYER_BY_ID\",\r\n  ADD_TRANSACTION: \"ADD_TRANSACTION\",\r\n  BANK: \"Bank\",\r\n  FREE_PARKING: \"Free parking\",\r\n  ADD_SALARY: \"ADD_SALARY\",\r\n};\r\n\r\nexport default playerEnum;\r\n","export default function Transaction(amount, receiver) {\r\n  this.amount = amount;\r\n  this.receiver = receiver;\r\n}\r\n","import playerEnum from \"../enums/playerEnum\";\r\nimport Transaction from \"./transaction\";\r\n\r\nexport default function Player(name) {\r\n  this.name = name;\r\n  this.budget = 1500;\r\n  this.transactions = [new Transaction(1500, playerEnum.BANK)];\r\n}\r\n","import playerEnum from \"../../enums/playerEnum\";\r\nimport Player from \"../../models/player\";\r\nimport Transaction from \"../../models/transaction\";\r\n\r\nconst freeParking = new Player(playerEnum.FREE_PARKING);\r\nfreeParking.budget = 0;\r\nconst bank = new Player(playerEnum.BANK);\r\nbank.budget = 10000000;\r\nconst initialState = [bank, freeParking, new Player(\"Dante\")];\r\n\r\nexport default function playerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case playerEnum.ADD_PLAYER:\r\n      return [...state, action.payload];\r\n    case playerEnum.GET_PLAYER_BY_ID:\r\n      return state[action.payload];\r\n    case playerEnum.ADD_TRANSACTION:\r\n    case playerEnum.ADD_SALARY:\r\n      let newState = [...state];\r\n\r\n      newState = AddTransaction(newState, action);\r\n\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AddTransaction(state, action) {\r\n  let player = state[action.payload.id];\r\n  let receiverPlayer = state.find(function (el) {\r\n    return el.name == action.payload.receiver;\r\n  });\r\n\r\n  const amount = parseInt(action.payload.transaction);\r\n  player = AddTransactionForPlayer(\r\n    action.payload.receiver,\r\n    amount * -1,\r\n    player\r\n  );\r\n\r\n  receiverPlayer = AddTransactionForPlayer(player.name, amount, receiverPlayer);\r\n\r\n  return state;\r\n}\r\n\r\nfunction AddTransactionForPlayer(receiver, amount, player) {\r\n  player.budget += amount;\r\n\r\n  player.transactions.push(new Transaction(amount, receiver));\r\n\r\n  return player;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./implementations/playerReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  players: playerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as playerActions from \"../../redux/actions/playerActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport playerEnum from \"../../redux/enums/playerEnum\";\r\n\r\nfunction SalaryBtn(props) {\r\n  const player = props.player;\r\n  const dispatch = useDispatch();\r\n  function addSalary() {\r\n    dispatch(playerActions.addSalary(player.name));\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {player.name != playerEnum.BANK &&\r\n      player.name != playerEnum.FREE_PARKING ? (\r\n        <button className=\"btn btn-success me-3\" onClick={addSalary}>\r\n          <i className=\"bi bi-cash\"></i>{\" \"}\r\n          <span className=\"d-none d-md-inline-block\">Salary</span>\r\n        </button>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default SalaryBtn;\r\n","import playerEnum from \"../enums/playerEnum\";\r\n\r\nexport const getPlayers = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: playerEnum.GET_PLAYERS,\r\n    });\r\n  };\r\n};\r\n\r\nexport const addPlayer = (player) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: playerEnum.ADD_PLAYER,\r\n      payload: player,\r\n    });\r\n  };\r\n};\r\n\r\nexport const getPlayerById = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: playerEnum.GET_PLAYER_BY_ID,\r\n      payload: id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const addTransactionToPlayer = (id, transaction, receiver) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: playerEnum.ADD_TRANSACTION,\r\n      payload: { id: id, transaction: transaction, receiver: receiver },\r\n    });\r\n  };\r\n};\r\n\r\nexport const addSalary = (receiver) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: playerEnum.ADD_SALARY,\r\n      payload: { id: 0, transaction: 200, receiver: receiver },\r\n    });\r\n  };\r\n};\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport SalaryBtn from \"../transactions/salaryBtn\";\r\n\r\nfunction ListItem(props) {\r\n  const player = props.player;\r\n  const path = `/transaction/add/${props.number}`;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {player.name} ({props.number})\r\n      </td>\r\n      <td>{player.budget}</td>\r\n      <td>\r\n        <Link to={path} className=\"btn btn-primary me-3\">\r\n          <i className=\"bi bi-plus\"></i>\r\n          <span className=\"d-none d-md-inline-block\">Add transaction</span>\r\n        </Link>\r\n        <SalaryBtn player={player} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListItem from \"./list-item\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction List() {\r\n  const players = useSelector((state) => state.players);\r\n  const cols = 3;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 border border-1 rounded p-3 mt-3\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Budget</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {players && players.length > 0 ? (\r\n              players.map((player, index) => {\r\n                return <ListItem player={player} number={index} />;\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={cols}>No players found</td>\r\n              </tr>\r\n            )}\r\n            <tr>\r\n              <td colSpan={cols}>\r\n                <Link to=\"/add\">Add player</Link>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport Player from \"../../redux/models/player\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as playerActions from \"../../redux/actions/playerActions\";\r\n\r\nfunction Add() {\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const player = new Player(name);\r\n\r\n    dispatch(playerActions.addPlayer(player));\r\n\r\n    history.push(\"/list\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12\" className=\" border border-1 rounded p-3 mt-3\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label for=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","function TransactionHistory(props) {\r\n  const player = props.player;\r\n  return (\r\n    <div className=\"border border-1 rounded p-3 mt-3\">\r\n      <h3>History</h3>\r\n      <table className=\"mt-3 table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Transaction</th>\r\n            <th>Receiver</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {player.transactions && player.transactions.length > 0 ? (\r\n            player.transactions.map((transaction) => {\r\n              return (\r\n                <tr>\r\n                  <td>{transaction.amount}</td>\r\n                  <td>{transaction.receiver}</td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td>No transactions found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as playerActions from \"../../redux/actions/playerActions\";\r\nimport playerEnum from \"../../redux/enums/playerEnum\";\r\nimport SalaryBtn from \"./salaryBtn\";\r\nimport TransactionHistory from \"./transactionHistory\";\r\n\r\nfunction AddTransaction() {\r\n  let { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [number, setBudget] = useState(\"\");\r\n  const [receiver, setReceiver] = useState(playerEnum.BANK);\r\n\r\n  let players = useSelector((state) => state.players);\r\n\r\n  const player = players[id];\r\n\r\n  players = players.filter(function (el) {\r\n    return el.name != player.name;\r\n  });\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    dispatch(playerActions.addTransactionToPlayer(id, number, receiver));\r\n  }\r\n\r\n  function getClassNames(name) {\r\n    switch (name) {\r\n      case playerEnum.BANK:\r\n        return \"btn btn-dark me-3\";\r\n      case playerEnum.FREE_PARKING:\r\n        return \"btn btn-secondary me-3\";\r\n      default:\r\n        return \"btn btn-outline-primary me-3\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {player ? (\r\n        <div className=\"col-12\">\r\n          <h1>{player.name}</h1>\r\n          <h2>Budget: {player.budget}</h2>\r\n          <div className=\"border border-1 rounded p-3 mt-3\">\r\n            <h3>Quick actions</h3>\r\n            <SalaryBtn player={player} />\r\n          </div>\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            className=\"border border-1 rounded p-3 mt-3\"\r\n          >\r\n            <div className=\"form-group col-12\">\r\n              <label for=\"number\">Amount:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"budget\"\r\n                  value={number}\r\n                  min=\"0\"\r\n                  onChange={(e) => setBudget(e.target.value)}\r\n                  required\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">--> {receiver}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              {players && players.length > 0 ? (\r\n                players.map((player, index) => {\r\n                  let classNames = getClassNames(player.name);\r\n\r\n                  return (\r\n                    <button\r\n                      type=\"button\"\r\n                      className={classNames}\r\n                      id={player.name}\r\n                      onClick={(e) => setReceiver(e.target.id)}\r\n                    >\r\n                      {player.name}\r\n                    </button>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className=\"btn btn-primary  mt-3\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <TransactionHistory player={player} />\r\n        </div>\r\n      ) : (\r\n        <div>Player not found</div>\r\n      )}\r\n      <Link to=\"/list\" className=\"btn btn-light float-end mt-3\">\r\n        Back\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTransaction;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport List from \"./components/players/list\";\r\nimport Add from \"./components/players/add\";\r\nimport AddTransaction from \"./components/transactions/transactionAdd\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App container\">\r\n      <div className=\"col-12\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <List />\r\n          </Route>\r\n          <Route path=\"/list\">\r\n            <List />\r\n          </Route>\r\n          <Route exact path=\"/add\">\r\n            <Add />\r\n          </Route>\r\n          <Route path=\"/transaction/add/:id\">\r\n            <AddTransaction />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./redux/store\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  // Render a `<Provider>` around the entire `<App>`,\r\n  // and pass the Redux store to as a prop\r\n\r\n  <Provider store={store}>\r\n    <BrowserRouter basename=\"/monopoly-score-keeper\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nserviceWorkerRegistration.register();\r\n","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n}\r\n"],"sourceRoot":""}